/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/langscreen_screen/langScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

langScreenViewBase::langScreenViewBase() :
    buttonCallback(this, &langScreenViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &langScreenViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    i_bg.setXY(0, 0);
    i_bg.setBitmap(touchgfx::Bitmap(BITMAP_MENU_SCREEN_BG_ID));
    add(i_bg);

    backBtn.setXY(2, 1);
    backBtn.setBitmaps(touchgfx::Bitmap(BITMAP_RETURN_BTN56_ID), touchgfx::Bitmap(BITMAP_RETURN_BTN_PRESSED56_ID));
    backBtn.setAction(buttonCallback);
    add(backBtn);

    line1.setPosition(5, 60, 790, 5);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(790, 0);
    line1.setLineWidth(3);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    dialogLabel.setPosition(250, 13, 300, 36);
    dialogLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dialogLabel.setLinespacing(0);
    dialogLabel.setTypedText(touchgfx::TypedText(T_S_LANGDLG));
    add(dialogLabel);

    engBtn.setBitmaps(Bitmap(BITMAP_BTN175_ID), Bitmap(BITMAP_BTN175_P_ID));
    engBtn.setBitmapXY(0, 0);
    engBtn.setIconBitmaps(Bitmap(BITMAP_USA_FLAG_ID), Bitmap(BITMAP_USA_FLAG_ID));
    engBtn.setIconXY(57, 0);
    engBtn.setText(TypedText(T_S_ENGLISH));
    engBtn.setTextPosition(0, 58, 175, 100);
    engBtn.setTextColors(touchgfx::Color::getColorFromRGB(213, 115, 0), touchgfx::Color::getColorFromRGB(213, 115, 0));
    engBtn.setAction(flexButtonCallback);
    engBtn.setPosition(200, 178, 175, 100);
    add(engBtn);

    svkBtn.setBitmaps(Bitmap(BITMAP_BTN175_ID), Bitmap(BITMAP_BTN175_P_ID));
    svkBtn.setBitmapXY(0, 0);
    svkBtn.setIconBitmaps(Bitmap(BITMAP_SVK_FLAG_ID), Bitmap(BITMAP_SVK_FLAG_ID));
    svkBtn.setIconXY(57, 0);
    svkBtn.setText(TypedText(T_S_SLOVAK));
    svkBtn.setTextPosition(0, 58, 175, 100);
    svkBtn.setTextColors(touchgfx::Color::getColorFromRGB(213, 115, 0), touchgfx::Color::getColorFromRGB(213, 115, 0));
    svkBtn.setAction(flexButtonCallback);
    svkBtn.setPosition(428, 178, 175, 100);
    add(svkBtn);
}

langScreenViewBase::~langScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void langScreenViewBase::setupScreen()
{

}

void langScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backBtn)
    {
        //backBtn_itt
        //When backBtn clicked change screen to serviceScreen
        //Go to serviceScreen with no screen transition
        application().gotoserviceScreenScreenNoTransition();
    }
}

void langScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &svkBtn)
    {
        //svkBtn_itt
        //When svkBtn clicked call virtual function
        //Call svkBtnClicked
        svkBtnClicked();
    }
    if (&src == &engBtn)
    {
        //engBtn_itt
        //When engBtn clicked call virtual function
        //Call engBtnClicked
        engBtnClicked();
    }
}
