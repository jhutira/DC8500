/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/distribscreen_screen/distribScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

distribScreenViewBase::distribScreenViewBase() :
    buttonCallback(this, &distribScreenViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    i_bg.setXY(0, 0);
    i_bg.setBitmap(touchgfx::Bitmap(BITMAP_MENU_SCREEN_BG_ID));
    add(i_bg);

    okBtn.setXY(723, 1);
    okBtn.setBitmaps(touchgfx::Bitmap(BITMAP_OK_BTN56_ID), touchgfx::Bitmap(BITMAP_OK_BTN_PRESSED56_ID));
    okBtn.setAction(buttonCallback);
    add(okBtn);

    hBtn.setXY(313, 190);
    hBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_DISTRIB_HEAT_ID), touchgfx::Bitmap(BITMAP_BTN_DISTRIB_HEAT_ID), touchgfx::Bitmap(BITMAP_BTN_DISTRIB_HEAT_P_ID), touchgfx::Bitmap(BITMAP_BTN_DISTRIB_HEAT_P_ID));
    hBtn.setSelected(false);
    hBtn.setDeselectionEnabled(false);
    radioButtonGroup1.add(hBtn);
    add(hBtn);

    backBtn.setXY(2, 1);
    backBtn.setBitmaps(touchgfx::Bitmap(BITMAP_RETURN_BTN56_ID), touchgfx::Bitmap(BITMAP_RETURN_BTN_PRESSED56_ID));
    backBtn.setAction(buttonCallback);
    add(backBtn);

    line1.setPosition(5, 60, 790, 5);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(790, 0);
    line1.setLineWidth(3);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    dialogLabel.setPosition(250, 13, 300, 36);
    dialogLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dialogLabel.setLinespacing(0);
    dialogLabel.setTypedText(touchgfx::TypedText(T_S_DISTRIBDLG));
    add(dialogLabel);

    wBtn.setXY(518, 190);
    wBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_DISTRIB_WATER_ID), touchgfx::Bitmap(BITMAP_BTN_DISTRIB_WATER_ID), touchgfx::Bitmap(BITMAP_BTN_DISTRIB_WATER_P_ID), touchgfx::Bitmap(BITMAP_BTN_DISTRIB_WATER_P_ID));
    wBtn.setSelected(false);
    wBtn.setDeselectionEnabled(false);
    radioButtonGroup1.add(wBtn);
    add(wBtn);

    whBtn.setXY(108, 190);
    whBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_DISTRIB_HEAT_WATER_ID), touchgfx::Bitmap(BITMAP_BTN_DISTRIB_HEAT_WATER_ID), touchgfx::Bitmap(BITMAP_BTN_DISTRIB_HEAT_WATER_P_ID), touchgfx::Bitmap(BITMAP_BTN_DISTRIB_HEAT_WATER_P_ID));
    whBtn.setSelected(false);
    whBtn.setDeselectionEnabled(false);
    radioButtonGroup1.add(whBtn);
    add(whBtn);
}

distribScreenViewBase::~distribScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void distribScreenViewBase::setupScreen()
{

}

void distribScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backBtn)
    {
        //backBtn_itt
        //When backBtn clicked change screen to menuScreen
        //Go to menuScreen with no screen transition
        application().gotomenuScreenScreenNoTransition();
    }
    if (&src == &okBtn)
    {
        //okBtn_itt
        //When okBtn clicked call virtual function
        //Call okBtnClicked
        okBtnClicked();
    }
}
