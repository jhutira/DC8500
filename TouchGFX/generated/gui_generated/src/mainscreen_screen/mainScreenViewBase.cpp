/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/mainScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

mainScreenViewBase::mainScreenViewBase() :
    buttonCallback(this, &mainScreenViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler),
    sliderValueConfirmedCallback(this, &mainScreenViewBase::sliderValueConfirmedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    i_bg.setXY(0, 0);
    i_bg.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_SCREEN_BG_ID));
    add(i_bg);

    i_sch.setXY(2, 65);
    i_sch.setBitmap(touchgfx::Bitmap(BITMAP_M_SCH2_ID));
    add(i_sch);

    p_pump3.setXY(614, 351);
    add(p_pump3);

    p_pump2.setXY(547, 108);
    add(p_pump2);

    p_pump1.setXY(345, 351);
    add(p_pump1);

    line1.setPosition(5, 60, 790, 5);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(790, 0);
    line1.setLineWidth(3);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    menuBtn.setXY(1, 1);
    menuBtn.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BTN_ID), touchgfx::Bitmap(BITMAP_MENU_BTN_PRESSED_ID));
    menuBtn.setAction(buttonCallback);
    add(menuBtn);

    p_clock.setXY(683, 1);
    p_clock.setBitmap(touchgfx::Bitmap(BITMAP_INFO_REC115_ID));
    add(p_clock);

    t_timeClock.setPosition(694, 6, 98, 24);
    t_timeClock.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_timeClock.setLinespacing(0);
    t_timeClockBuffer[0] = 0;
    t_timeClock.setWildcard(t_timeClockBuffer);
    t_timeClock.setTypedText(touchgfx::TypedText(T_V_TIMECLOCK));
    add(t_timeClock);

    t_dateClock.setPosition(697, 31, 92, 15);
    t_dateClock.setColor(touchgfx::Color::getColorFromRGB(8, 0, 255));
    t_dateClock.setLinespacing(0);
    t_dateClockBuffer[0] = 0;
    t_dateClock.setWildcard(t_dateClockBuffer);
    t_dateClock.setTypedText(touchgfx::TypedText(T_V_DATECLOCK));
    add(t_dateClock);

    p_info.setXY(119, 1);
    p_info.setBitmap(touchgfx::Bitmap(BITMAP_INFO_REC561_ID));
    add(p_info);

    i_statusBar.setXY(1, 423);
    i_statusBar.setBitmap(touchgfx::Bitmap(BITMAP_STATUS_BAR_ID));
    add(i_statusBar);

    t_debug.setPosition(520, 437, 160, 26);
    t_debug.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_debug.setLinespacing(0);
    t_debugBuffer[0] = 0;
    t_debug.setWildcard(t_debugBuffer);
    t_debug.setTypedText(touchgfx::TypedText(T_T_DEBUG));
    add(t_debug);

    i_sflap.setXY(124, 453);
    i_sflap.setBitmap(touchgfx::Bitmap(BITMAP_AIRFLAP_SEC_ID));
    add(i_sflap);

    i_pflap.setXY(24, 453);
    i_pflap.setBitmap(touchgfx::Bitmap(BITMAP_AIRFLAP_PRIM_ID));
    add(i_pflap);

    t_pflap.setPosition(11, 425, 80, 22);
    t_pflap.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_pflap.setLinespacing(0);
    t_pflapBuffer[0] = 0;
    t_pflap.setWildcard(t_pflapBuffer);
    t_pflap.setTypedText(touchgfx::TypedText(T_V_PFLAP));
    add(t_pflap);

    t_sflap.setPosition(111, 425, 80, 22);
    t_sflap.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_sflap.setLinespacing(0);
    t_sflapBuffer[0] = 0;
    t_sflap.setWildcard(t_sflapBuffer);
    t_sflap.setTypedText(touchgfx::TypedText(T_V_SFLAP));
    add(t_sflap);

    profileSld.setXY(15, 128);
    profileSld.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_FILLER_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUNDED_LIGHT_ID));
    profileSld.setupVerticalSlider(15, 11, 2, 0, 200);
    profileSld.setValueRange(0, 50);
    profileSld.setValue(0);
    profileSld.setNewValueCallback(sliderValueChangedCallback);
    profileSld.setStopValueCallback(sliderValueConfirmedCallback);
    add(profileSld);

    t_accLevel.setPosition(433, 290, 96, 24);
    t_accLevel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    t_accLevel.setLinespacing(0);
    t_accLevelBuffer[0] = 0;
    t_accLevel.setWildcard(t_accLevelBuffer);
    t_accLevel.setTypedText(touchgfx::TypedText(T_V_ACCLEVEL));
    add(t_accLevel);

    t_info.setPosition(130, 14, 540, 27);
    t_info.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));
    t_info.setLinespacing(0);
    t_info.setTypedText(touchgfx::TypedText(T_S_BP0_STOP));
    add(t_info);

    t_accEng.setPosition(361, 425, 160, 26);
    t_accEng.setColor(touchgfx::Color::getColorFromRGB(29, 4, 214));
    t_accEng.setLinespacing(0);
    t_accEngBuffer[0] = 0;
    t_accEng.setWildcard(t_accEngBuffer);
    t_accEng.setTypedText(touchgfx::TypedText(T_V_ACCENG));
    add(t_accEng);

    soundBtn.setXY(725, 424);
    soundBtn.setBitmaps(touchgfx::Bitmap(BITMAP_SOUND_BTN_ID), touchgfx::Bitmap(BITMAP_MUTE_BTN_ID));
    soundBtn.setAction(buttonCallback);
    add(soundBtn);

    doorBtn.setXY(207, 423);
    doorBtn.setBitmaps(touchgfx::Bitmap(BITMAP_DOOR_BTN_ID), touchgfx::Bitmap(BITMAP_DOOR_BTN_PRESSED_ID));
    doorBtn.setLabelText(touchgfx::TypedText(T_S_BTN_DOOR));
    doorBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    doorBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    doorBtn.setAction(buttonCallback);
    add(doorBtn);

    t_rTF.setPosition(10, 363, 46, 17);
    t_rTF.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    t_rTF.setLinespacing(0);
    t_rTFBuffer[0] = 0;
    t_rTF.setWildcard(t_rTFBuffer);
    t_rTF.setTypedText(touchgfx::TypedText(T_V_RTF));
    add(t_rTF);

    p_sen8.setXY(690, 317);
    add(p_sen8);

    p_sen7.setXY(426, 102);
    add(p_sen7);

    p_sen6.setXY(655, 182);
    add(p_sen6);

    p_sen5.setXY(433, 250);
    add(p_sen5);

    p_sen4.setXY(116, 70);
    add(p_sen4);

    p_sen3.setXY(238, 143);
    add(p_sen3);

    p_sen2.setXY(433, 330);
    add(p_sen2);

    p_sen1.setXY(238, 85);
    add(p_sen1);

    p_senO2.setXY(13, 70);
    add(p_senO2);

    p_flow.setXY(13, 103);
    p_flow.setVisible(false);
    add(p_flow);

    p_valve1.setXY(610, 93);
    add(p_valve1);

    p_sen9.setXY(405, 70);
    add(p_sen9);

    i_man.setXY(694, 66);
    i_man.setBitmap(touchgfx::Bitmap(BITMAP_MANICON_ID));
    add(i_man);

    i_err.setXY(589, 66);
    i_err.setBitmap(touchgfx::Bitmap(BITMAP_ERRICON_ID));
    add(i_err);

    t_apower.setPosition(110, 230, 105, 24);
    t_apower.setColor(touchgfx::Color::getColorFromRGB(250, 247, 247));
    t_apower.setLinespacing(0);
    t_apowerBuffer[0] = 0;
    t_apower.setWildcard(t_apowerBuffer);
    t_apower.setTypedText(touchgfx::TypedText(T_V_APOWER));
    add(t_apower);
}

mainScreenViewBase::~mainScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void mainScreenViewBase::setupScreen()
{
    p_pump3.initialize();
    p_pump2.initialize();
    p_pump1.initialize();
    p_sen8.initialize();
    p_sen7.initialize();
    p_sen6.initialize();
    p_sen5.initialize();
    p_sen4.initialize();
    p_sen3.initialize();
    p_sen2.initialize();
    p_sen1.initialize();
    p_senO2.initialize();
    p_flow.initialize();
    p_valve1.initialize();
    p_sen9.initialize();
}

void mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &menuBtn)
    {
        //menuBtn_itt
        //When menuBtn clicked change screen to menuScreen
        //Go to menuScreen with no screen transition
        application().gotomenuScreenScreenNoTransition();
    }
    if (&src == &doorBtn)
    {
        //doorBtn_itt
        //When doorBtn clicked call virtual function
        //Call doorBtn_clicked
        doorBtn_clicked();
    }
    if (&src == &soundBtn)
    {
        //soundBtn_itt
        //When soundBtn clicked call virtual function
        //Call soundBtn_clicked
        soundBtn_clicked();
    }
}

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &profileSld)
    {
        //profileSld_itt
        //When profileSld value changed call virtual function
        //Call profileSldChangeVal
        profileSldChangeVal(value);
    }
}

void mainScreenViewBase::sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &profileSld)
    {
        //profileSld_itt2
        //When profileSld value confirmed call virtual function
        //Call profileSldChangeConf
        profileSldChangeConf(value);
    }
}
