/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menuscreen_screen/menuScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

menuScreenViewBase::menuScreenViewBase() :
    buttonCallback(this, &menuScreenViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    i_bg.setXY(0, 0);
    i_bg.setBitmap(touchgfx::Bitmap(BITMAP_MENU_SCREEN_BG_ID));
    add(i_bg);

    burnBtn.setXY(26, 220);
    burnBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    burnBtn.setLabelText(touchgfx::TypedText(T_S_BURNBTN));
    burnBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    burnBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    burnBtn.setAction(buttonCallback);
    add(burnBtn);

    accumBtn.setXY(26, 340);
    accumBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    accumBtn.setLabelText(touchgfx::TypedText(T_S_ACCUMBTN));
    accumBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    accumBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    accumBtn.setAction(buttonCallback);
    add(accumBtn);

    boilerBtn.setXY(218, 340);
    boilerBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    boilerBtn.setLabelText(touchgfx::TypedText(T_S_BOILERBTN));
    boilerBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    boilerBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boilerBtn.setAction(buttonCallback);
    add(boilerBtn);

    distribBtn.setXY(218, 220);
    distribBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    distribBtn.setLabelText(touchgfx::TypedText(T_S_DISTRIBBTN));
    distribBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    distribBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    distribBtn.setAction(buttonCallback);
    add(distribBtn);

    manualBtn.setXY(600, 100);
    manualBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    manualBtn.setLabelText(touchgfx::TypedText(T_S_MANUALBTN));
    manualBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    manualBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    manualBtn.setAction(buttonCallback);
    add(manualBtn);

    serviceBtn.setXY(600, 340);
    serviceBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    serviceBtn.setLabelText(touchgfx::TypedText(T_S_SERVICEBTN));
    serviceBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    serviceBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    serviceBtn.setAction(buttonCallback);
    add(serviceBtn);

    line1.setPosition(5, 60, 790, 5);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(790, 0);
    line1.setLineWidth(3);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    homeBtn.setXY(2, 1);
    homeBtn.setBitmaps(touchgfx::Bitmap(BITMAP_HOME_BTN56_ID), touchgfx::Bitmap(BITMAP_HOME_BTN_PRESSED56_ID));
    homeBtn.setAction(buttonCallback);
    add(homeBtn);

    dialogLabel.setPosition(250, 13, 300, 36);
    dialogLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dialogLabel.setLinespacing(0);
    dialogLabel.setTypedText(touchgfx::TypedText(T_S_MENUDLG));
    add(dialogLabel);

    timeBtn.setXY(26, 100);
    timeBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    timeBtn.setLabelText(touchgfx::TypedText(T_S_TIMEBTN));
    timeBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    timeBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    timeBtn.setAction(buttonCallback);
    add(timeBtn);

    dateBtn.setXY(218, 100);
    dateBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    dateBtn.setLabelText(touchgfx::TypedText(T_S_DATEBTN));
    dateBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    dateBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dateBtn.setAction(buttonCallback);
    add(dateBtn);

    infoBtn.setXY(410, 100);
    infoBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    infoBtn.setLabelText(touchgfx::TypedText(T_S_INFOBTN));
    infoBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    infoBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    infoBtn.setAction(buttonCallback);
    add(infoBtn);
}

menuScreenViewBase::~menuScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void menuScreenViewBase::setupScreen()
{

}

void menuScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &homeBtn)
    {
        //homeBtn_itt
        //When homeBtn clicked change screen to mainScreen
        //Go to mainScreen with no screen transition
        application().gotomainScreenScreenNoTransition();
    }
    if (&src == &timeBtn)
    {
        //timeBtn_itt
        //When timeBtn clicked change screen to timeScreen
        //Go to timeScreen with no screen transition
        application().gototimeScreenScreenNoTransition();
    }
    if (&src == &dateBtn)
    {
        //dateBtn_itt
        //When dateBtn clicked change screen to dateScreen
        //Go to dateScreen with no screen transition
        application().gotodateScreenScreenNoTransition();
    }
    if (&src == &infoBtn)
    {
        //infoBtn_itt
        //When infoBtn clicked change screen to infoScreen
        //Go to infoScreen with no screen transition
        application().gotoinfoScreenScreenNoTransition();
    }
    if (&src == &manualBtn)
    {
        //manualBtn_itt
        //When manualBtn clicked change screen to manualScreen
        //Go to manualScreen with no screen transition
        application().gotomanualScreenScreenNoTransition();
    }
    if (&src == &burnBtn)
    {
        //burnBtn_itt
        //When burnBtn clicked change screen to burnScreen
        //Go to burnScreen with no screen transition
        application().gotoburnScreenScreenNoTransition();
    }
    if (&src == &serviceBtn)
    {
        //serviceBtn_itt
        //When serviceBtn clicked call virtual function
        //Call serviceBtnClicked
        serviceBtnClicked();
    }
    if (&src == &distribBtn)
    {
        //distribBtn_itt
        //When distribBtn clicked change screen to distribScreen
        //Go to distribScreen with no screen transition
        application().gotodistribScreenScreenNoTransition();
    }
    if (&src == &accumBtn)
    {
        //accumBtn_itt
        //When accumBtn clicked change screen to accumScreen
        //Go to accumScreen with no screen transition
        application().gotoaccumScreenScreenNoTransition();
    }
    if (&src == &boilerBtn)
    {
        //boilerBtn_itt
        //When boilerBtn clicked change screen to boilerScreen
        //Go to boilerScreen with no screen transition
        application().gotoboilerScreenScreenNoTransition();
    }
}
