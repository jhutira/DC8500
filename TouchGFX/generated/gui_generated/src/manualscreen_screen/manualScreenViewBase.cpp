/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/manualscreen_screen/manualScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

manualScreenViewBase::manualScreenViewBase() :
    buttonCallback(this, &manualScreenViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &manualScreenViewBase::radioButtonSelectedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    i_bg.setXY(0, 1);
    i_bg.setBitmap(touchgfx::Bitmap(BITMAP_MENU_SCREEN_BG_ID));
    add(i_bg);

    panel_Y3.setPosition(680, 100, 100, 330);
    imgBg_y3.setXY(0, 0);
    imgBg_y3.setBitmap(touchgfx::Bitmap(BITMAP_PANEL_MAN_ID));
    panel_Y3.add(imgBg_y3);

    img_y3.setXY(17, 10);
    img_y3.setBitmap(touchgfx::Bitmap(BITMAP_PUMP_ON_ID));
    panel_Y3.add(img_y3);

    rbg_y3.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    rbAuto_y3.setXY(10, 240);
    rbAuto_y3.setBitmaps(touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID));
    rbAuto_y3.setSelected(false);
    rbAuto_y3.setDeselectionEnabled(false);
    rbg_y3.add(rbAuto_y3);
    panel_Y3.add(rbAuto_y3);

    rbOff_y3.setXY(10, 155);
    rbOff_y3.setBitmaps(touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID));
    rbOff_y3.setSelected(false);
    rbOff_y3.setDeselectionEnabled(false);
    rbg_y3.add(rbOff_y3);
    panel_Y3.add(rbOff_y3);

    rbOn_y3.setXY(10, 70);
    rbOn_y3.setBitmaps(touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID));
    rbOn_y3.setSelected(false);
    rbOn_y3.setDeselectionEnabled(false);
    rbg_y3.add(rbOn_y3);
    panel_Y3.add(rbOn_y3);

    t_panel_y3.setPosition(47, 8, 40, 24);
    t_panel_y3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_panel_y3.setLinespacing(0);
    t_panel_y3Buffer[0] = 0;
    t_panel_y3.setWildcard(t_panel_y3Buffer);
    t_panel_y3.setTypedText(touchgfx::TypedText(T_T_PANEL_P1));
    panel_Y3.add(t_panel_y3);

    add(panel_Y3);

    panel_Y1.setPosition(460, 100, 100, 330);
    imgBg_y1.setXY(0, 0);
    imgBg_y1.setBitmap(touchgfx::Bitmap(BITMAP_PANEL_MAN_ID));
    panel_Y1.add(imgBg_y1);

    img_y1.setXY(17, 10);
    img_y1.setBitmap(touchgfx::Bitmap(BITMAP_PUMP_ON_ID));
    panel_Y1.add(img_y1);

    rbg_y1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    rbAuto_y1.setXY(10, 240);
    rbAuto_y1.setBitmaps(touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID));
    rbAuto_y1.setSelected(false);
    rbAuto_y1.setDeselectionEnabled(false);
    rbg_y1.add(rbAuto_y1);
    panel_Y1.add(rbAuto_y1);

    rbOff_y1.setXY(10, 155);
    rbOff_y1.setBitmaps(touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID));
    rbOff_y1.setSelected(false);
    rbOff_y1.setDeselectionEnabled(false);
    rbg_y1.add(rbOff_y1);
    panel_Y1.add(rbOff_y1);

    rbOn_y1.setXY(10, 70);
    rbOn_y1.setBitmaps(touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID));
    rbOn_y1.setSelected(false);
    rbOn_y1.setDeselectionEnabled(false);
    rbg_y1.add(rbOn_y1);
    panel_Y1.add(rbOn_y1);

    t_panel_y1.setPosition(47, 8, 40, 24);
    t_panel_y1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_panel_y1.setLinespacing(0);
    t_panel_y1Buffer[0] = 0;
    t_panel_y1.setWildcard(t_panel_y1Buffer);
    t_panel_y1.setTypedText(touchgfx::TypedText(T_T_PANEL_P1));
    panel_Y1.add(t_panel_y1);

    add(panel_Y1);

    panel_Y2.setPosition(570, 100, 100, 330);
    imgBg_y2.setXY(0, 0);
    imgBg_y2.setBitmap(touchgfx::Bitmap(BITMAP_PANEL_MAN_ID));
    panel_Y2.add(imgBg_y2);

    img_y2.setXY(17, 10);
    img_y2.setBitmap(touchgfx::Bitmap(BITMAP_PUMP_ON_ID));
    panel_Y2.add(img_y2);

    rbg_y2.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    rbAuto_y2.setXY(10, 240);
    rbAuto_y2.setBitmaps(touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID));
    rbAuto_y2.setSelected(false);
    rbAuto_y2.setDeselectionEnabled(false);
    rbg_y2.add(rbAuto_y2);
    panel_Y2.add(rbAuto_y2);

    rbOff_y2.setXY(10, 155);
    rbOff_y2.setBitmaps(touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID));
    rbOff_y2.setSelected(false);
    rbOff_y2.setDeselectionEnabled(false);
    rbg_y2.add(rbOff_y2);
    panel_Y2.add(rbOff_y2);

    rbOn_y2.setXY(10, 70);
    rbOn_y2.setBitmaps(touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID));
    rbOn_y2.setSelected(false);
    rbOn_y2.setDeselectionEnabled(false);
    rbg_y2.add(rbOn_y2);
    panel_Y2.add(rbOn_y2);

    t_panel_y2.setPosition(47, 8, 40, 24);
    t_panel_y2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_panel_y2.setLinespacing(0);
    t_panel_y2Buffer[0] = 0;
    t_panel_y2.setWildcard(t_panel_y2Buffer);
    t_panel_y2.setTypedText(touchgfx::TypedText(T_T_PANEL_P1));
    panel_Y2.add(t_panel_y2);

    add(panel_Y2);

    panel_p2.setPosition(350, 100, 100, 330);
    imgBg_p2.setXY(0, 0);
    imgBg_p2.setBitmap(touchgfx::Bitmap(BITMAP_PANEL_MAN_ID));
    panel_p2.add(imgBg_p2);

    img_p2.setXY(17, 10);
    img_p2.setBitmap(touchgfx::Bitmap(BITMAP_PUMP_ON_ID));
    panel_p2.add(img_p2);

    rbg_p2.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    rbAuto_p2.setXY(10, 240);
    rbAuto_p2.setBitmaps(touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID));
    rbAuto_p2.setSelected(false);
    rbAuto_p2.setDeselectionEnabled(false);
    rbg_p2.add(rbAuto_p2);
    panel_p2.add(rbAuto_p2);

    rbOff_p2.setXY(10, 155);
    rbOff_p2.setBitmaps(touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID));
    rbOff_p2.setSelected(false);
    rbOff_p2.setDeselectionEnabled(false);
    rbg_p2.add(rbOff_p2);
    panel_p2.add(rbOff_p2);

    rbOn_p2.setXY(10, 70);
    rbOn_p2.setBitmaps(touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID));
    rbOn_p2.setSelected(false);
    rbOn_p2.setDeselectionEnabled(false);
    rbg_p2.add(rbOn_p2);
    panel_p2.add(rbOn_p2);

    t_panel_p2.setPosition(47, 8, 40, 24);
    t_panel_p2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_panel_p2.setLinespacing(0);
    t_panel_p2Buffer[0] = 0;
    t_panel_p2.setWildcard(t_panel_p2Buffer);
    t_panel_p2.setTypedText(touchgfx::TypedText(T_T_PANEL_P1));
    panel_p2.add(t_panel_p2);

    add(panel_p2);

    panel_p1.setPosition(240, 100, 100, 330);
    imgBg_p1.setXY(0, 0);
    imgBg_p1.setBitmap(touchgfx::Bitmap(BITMAP_PANEL_MAN_ID));
    panel_p1.add(imgBg_p1);

    img_p1.setXY(17, 10);
    img_p1.setBitmap(touchgfx::Bitmap(BITMAP_PUMP_ON_ID));
    panel_p1.add(img_p1);

    rbg_p1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    rbAuto_p1.setXY(10, 240);
    rbAuto_p1.setBitmaps(touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID));
    rbAuto_p1.setSelected(false);
    rbAuto_p1.setDeselectionEnabled(false);
    rbg_p1.add(rbAuto_p1);
    panel_p1.add(rbAuto_p1);

    rbOff_p1.setXY(10, 155);
    rbOff_p1.setBitmaps(touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_OFF_BTN_PRESSED80_ID));
    rbOff_p1.setSelected(false);
    rbOff_p1.setDeselectionEnabled(false);
    rbg_p1.add(rbOff_p1);
    panel_p1.add(rbOff_p1);

    rbOn_p1.setXY(10, 70);
    rbOn_p1.setBitmaps(touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID), touchgfx::Bitmap(BITMAP_ON_BTN_PRESSED80_ID));
    rbOn_p1.setSelected(false);
    rbOn_p1.setDeselectionEnabled(false);
    rbg_p1.add(rbOn_p1);
    panel_p1.add(rbOn_p1);

    t_p1.setPosition(18, 37, 65, 23);
    t_p1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_p1.setLinespacing(0);
    t_p1Buffer[0] = 0;
    t_p1.setWildcard(t_p1Buffer);
    t_p1.setTypedText(touchgfx::TypedText(T_V_P1));
    panel_p1.add(t_p1);

    t_panel_p1.setPosition(47, 8, 40, 24);
    t_panel_p1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_panel_p1.setLinespacing(0);
    t_panel_p1Buffer[0] = 0;
    t_panel_p1.setWildcard(t_panel_p1Buffer);
    t_panel_p1.setTypedText(touchgfx::TypedText(T_T_PANEL_P1));
    panel_p1.add(t_panel_p1);

    add(panel_p1);

    panel_sf.setPosition(130, 100, 100, 330);
    imgBg_sf.setXY(0, 0);
    imgBg_sf.setBitmap(touchgfx::Bitmap(BITMAP_PANEL_MAN_ID));
    panel_sf.add(imgBg_sf);

    img_sf.setXY(23, 10);
    img_sf.setBitmap(touchgfx::Bitmap(BITMAP_AIRFLAP_SEC_ID));
    panel_sf.add(img_sf);

    t_sf.setPosition(18, 37, 65, 23);
    t_sf.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_sf.setLinespacing(0);
    t_sfBuffer[0] = 0;
    t_sf.setWildcard(t_sfBuffer);
    t_sf.setTypedText(touchgfx::TypedText(T_V_SF));
    panel_sf.add(t_sf);

    sfDownBtn.setXY(10, 155);
    sfDownBtn.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_BTN80_ID), touchgfx::Bitmap(BITMAP_DOWN_BTN_PRESSED80_ID));
    sfDownBtn.setDelay(60);
    sfDownBtn.setInterval(6);
    sfDownBtn.setAction(buttonCallback);
    panel_sf.add(sfDownBtn);

    sfUpBtn.setXY(10, 70);
    sfUpBtn.setBitmaps(touchgfx::Bitmap(BITMAP_UP_BTN80_ID), touchgfx::Bitmap(BITMAP_UP_BTN_PRESSED80_ID));
    sfUpBtn.setDelay(60);
    sfUpBtn.setInterval(6);
    sfUpBtn.setAction(buttonCallback);
    panel_sf.add(sfUpBtn);

    sfAutoBtn.setXY(10, 240);
    sfAutoBtn.setBitmaps(touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID));
    sfAutoBtn.setAction(buttonCallback);
    panel_sf.add(sfAutoBtn);

    add(panel_sf);

    backBtn.setXY(2, 1);
    backBtn.setBitmaps(touchgfx::Bitmap(BITMAP_RETURN_BTN56_ID), touchgfx::Bitmap(BITMAP_RETURN_BTN_PRESSED56_ID));
    backBtn.setAction(buttonCallback);
    add(backBtn);

    line1.setPosition(5, 60, 790, 5);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(790, 0);
    line1.setLineWidth(3);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    dialogLabel.setPosition(250, 13, 300, 36);
    dialogLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dialogLabel.setLinespacing(0);
    dialogLabel.setTypedText(touchgfx::TypedText(T_S_MANUALDLG));
    add(dialogLabel);

    panel_pf.setPosition(20, 100, 100, 330);
    imgBg_pf.setXY(0, 0);
    imgBg_pf.setBitmap(touchgfx::Bitmap(BITMAP_PANEL_MAN_ID));
    panel_pf.add(imgBg_pf);

    img_pf.setXY(23, 10);
    img_pf.setBitmap(touchgfx::Bitmap(BITMAP_AIRFLAP_PRIM_ID));
    panel_pf.add(img_pf);

    t_pf.setPosition(18, 37, 65, 23);
    t_pf.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    t_pf.setLinespacing(0);
    t_pfBuffer[0] = 0;
    t_pf.setWildcard(t_pfBuffer);
    t_pf.setTypedText(touchgfx::TypedText(T_V_PF));
    panel_pf.add(t_pf);

    pfDownBtn.setXY(10, 155);
    pfDownBtn.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_BTN80_ID), touchgfx::Bitmap(BITMAP_DOWN_BTN_PRESSED80_ID));
    pfDownBtn.setDelay(60);
    pfDownBtn.setInterval(6);
    pfDownBtn.setAction(buttonCallback);
    panel_pf.add(pfDownBtn);

    pfUpBtn.setXY(10, 70);
    pfUpBtn.setBitmaps(touchgfx::Bitmap(BITMAP_UP_BTN80_ID), touchgfx::Bitmap(BITMAP_UP_BTN_PRESSED80_ID));
    pfUpBtn.setDelay(60);
    pfUpBtn.setInterval(6);
    pfUpBtn.setAction(buttonCallback);
    panel_pf.add(pfUpBtn);

    pfAutoBtn.setXY(10, 240);
    pfAutoBtn.setBitmaps(touchgfx::Bitmap(BITMAP_AUTO_BTN80_ID), touchgfx::Bitmap(BITMAP_AUTO_BTN_PRESSED80_ID));
    pfAutoBtn.setAction(buttonCallback);
    panel_pf.add(pfAutoBtn);

    add(panel_pf);
}

manualScreenViewBase::~manualScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void manualScreenViewBase::setupScreen()
{

}

void manualScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backBtn)
    {
        //backBtn_itt
        //When backBtn clicked change screen to menuScreen
        //Go to menuScreen with no screen transition
        application().gotomenuScreenScreenNoTransition();
    }
    if (&src == &pfUpBtn)
    {
        //pfUpBtn_itt
        //When pfUpBtn clicked call virtual function
        //Call pfUpBtn_clicked
        pfUpBtn_clicked();
    }
    if (&src == &pfDownBtn)
    {
        //pfDownBtn_itt
        //When pfDownBtn clicked call virtual function
        //Call pfDownBtn_clicked
        pfDownBtn_clicked();
    }
    if (&src == &pfAutoBtn)
    {
        //pfAutoBtn_itt
        //When pfAutoBtn clicked call virtual function
        //Call pfAutoBtn_clicked
        pfAutoBtn_clicked();
    }
    if (&src == &sfUpBtn)
    {
        //sfUpBtn_itt
        //When sfUpBtn clicked call virtual function
        //Call sfUpBtn_clicked
        sfUpBtn_clicked();
    }
    if (&src == &sfDownBtn)
    {
        //sfDownBtn_itt
        //When sfDownBtn clicked call virtual function
        //Call sfDownBtn_clicked
        sfDownBtn_clicked();
    }
    if (&src == &sfAutoBtn)
    {
        //sfAutoBtn_itt
        //When sfAutoBtn clicked call virtual function
        //Call sfAutoBtn_clicked
        sfAutoBtn_clicked();
    }
}

void manualScreenViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &rbOn_p1)
    {
        //rbOnP1_itt
        //When rbOn_p1 selected call virtual function
        //Call rbOnP1_clicked
        rbOnP1_clicked();
    }
    if (&src == &rbOff_p1)
    {
        //rbOffP1_itt
        //When rbOff_p1 selected call virtual function
        //Call rbOffP1_clicked
        rbOffP1_clicked();
    }
    if (&src == &rbAuto_p1)
    {
        //rbAutoP1_itt
        //When rbAuto_p1 selected call virtual function
        //Call rbAutoP1_clicked
        rbAutoP1_clicked();
    }
    if (&src == &rbOn_p2)
    {
        //rbOnP2_itt
        //When rbOn_p2 selected call virtual function
        //Call rbOnP2_clicked
        rbOnP2_clicked();
    }
    if (&src == &rbOff_p2)
    {
        //rbOffP2_itt
        //When rbOff_p2 selected call virtual function
        //Call rbOffP2_clicked
        rbOffP2_clicked();
    }
    if (&src == &rbAuto_p2)
    {
        //rbAutoP2_itt
        //When rbAuto_p2 selected call virtual function
        //Call rbAutoP2_clicked
        rbAutoP2_clicked();
    }
    if (&src == &rbOn_y1)
    {
        //rbOnY1_itt
        //When rbOn_y1 selected call virtual function
        //Call rbOnY1_clicked
        rbOnY1_clicked();
    }
    if (&src == &rbOff_y1)
    {
        //rbOffY1_itt
        //When rbOff_y1 selected call virtual function
        //Call rbOffY1_clicked
        rbOffY1_clicked();
    }
    if (&src == &rbAuto_y1)
    {
        //rbAutoY1_itt
        //When rbAuto_y1 selected call virtual function
        //Call rbAutoY1_clicked
        rbAutoY1_clicked();
    }
    if (&src == &rbOn_y2)
    {
        //rbOnY2_itt
        //When rbOn_y2 selected call virtual function
        //Call rbOnY2_clicked
        rbOnY2_clicked();
    }
    if (&src == &rbOff_y2)
    {
        //rbOffY2_itt
        //When rbOff_y2 selected call virtual function
        //Call rbOffY2_clicked
        rbOffY2_clicked();
    }
    if (&src == &rbAuto_y2)
    {
        //rbAutoY2_itt
        //When rbAuto_y2 selected call virtual function
        //Call rbAutoY2_clicked
        rbAutoY2_clicked();
    }
    if (&src == &rbOn_y3)
    {
        //rbOnY3_itt
        //When rbOn_y3 selected call virtual function
        //Call rbOnY3_clicked
        rbOnY3_clicked();
    }
    if (&src == &rbOff_y3)
    {
        //rbOffY3_itt
        //When rbOff_y3 selected call virtual function
        //Call rbOffY3_clicked
        rbOffY3_clicked();
    }
    if (&src == &rbAuto_y3)
    {
        //rbAutoY3_itt
        //When rbAuto_y3 selected call virtual function
        //Call rbAutoY3_clicked
        rbAutoY3_clicked();
    }
}
