/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/servicescreen_screen/serviceScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

serviceScreenViewBase::serviceScreenViewBase() :
    buttonCallback(this, &serviceScreenViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    i_bg.setXY(0, 0);
    i_bg.setBitmap(touchgfx::Bitmap(BITMAP_MENU_SCREEN_BG_ID));
    add(i_bg);

    exchanBtn.setXY(600, 220);
    exchanBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    exchanBtn.setLabelText(touchgfx::TypedText(T_S_EXCHANBTN));
    exchanBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    exchanBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    exchanBtn.setAction(buttonCallback);
    add(exchanBtn);

    systemBtn.setXY(600, 340);
    systemBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    systemBtn.setLabelText(touchgfx::TypedText(T_S_SYSTEMBTN));
    systemBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    systemBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    systemBtn.setAction(buttonCallback);
    add(systemBtn);

    burnProcBtn.setXY(26, 220);
    burnProcBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    burnProcBtn.setLabelText(touchgfx::TypedText(T_S_BURNPROCBTN));
    burnProcBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    burnProcBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    burnProcBtn.setAction(buttonCallback);
    add(burnProcBtn);

    pflapBtn.setXY(217, 220);
    pflapBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    pflapBtn.setLabelText(touchgfx::TypedText(T_S_PFLAPBTN));
    pflapBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    pflapBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    pflapBtn.setAction(buttonCallback);
    add(pflapBtn);

    sflapBtn.setXY(410, 220);
    sflapBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    sflapBtn.setLabelText(touchgfx::TypedText(T_S_SFLAPBTN));
    sflapBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    sflapBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    sflapBtn.setAction(buttonCallback);
    add(sflapBtn);

    modeIOBtn.setXY(600, 100);
    modeIOBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    modeIOBtn.setLabelText(touchgfx::TypedText(T_S_MODEIOBTN));
    modeIOBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    modeIOBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    modeIOBtn.setAction(buttonCallback);
    add(modeIOBtn);

    langBtn.setXY(26, 100);
    langBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    langBtn.setLabelText(touchgfx::TypedText(T_S_LANGBTN));
    langBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    langBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    langBtn.setAction(buttonCallback);
    add(langBtn);

    modeBtn.setXY(217, 100);
    modeBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    modeBtn.setLabelText(touchgfx::TypedText(T_S_MODEBTN));
    modeBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    modeBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    modeBtn.setAction(buttonCallback);
    add(modeBtn);

    energyBtn.setXY(410, 100);
    energyBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BTN175_ID), touchgfx::Bitmap(BITMAP_BTN175_ID));
    energyBtn.setLabelText(touchgfx::TypedText(T_S_ENERGYBTN));
    energyBtn.setLabelColor(touchgfx::Color::getColorFromRGB(46, 45, 45));
    energyBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    energyBtn.setAction(buttonCallback);
    add(energyBtn);

    backBtn.setXY(2, 1);
    backBtn.setBitmaps(touchgfx::Bitmap(BITMAP_RETURN_BTN56_ID), touchgfx::Bitmap(BITMAP_RETURN_BTN_PRESSED56_ID));
    backBtn.setAction(buttonCallback);
    add(backBtn);

    line1.setPosition(5, 60, 790, 5);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(790, 0);
    line1.setLineWidth(3);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    dialogLabel.setPosition(250, 13, 300, 36);
    dialogLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dialogLabel.setLinespacing(0);
    dialogLabel.setTypedText(touchgfx::TypedText(T_S_SERVICEDLG));
    add(dialogLabel);
}

serviceScreenViewBase::~serviceScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void serviceScreenViewBase::setupScreen()
{

}

void serviceScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backBtn)
    {
        //backBtn_itt
        //When backBtn clicked change screen to menuScreen
        //Go to menuScreen with no screen transition
        application().gotomenuScreenScreenNoTransition();
    }
    if (&src == &langBtn)
    {
        //langBtn_itt
        //When langBtn clicked change screen to langScreen
        //Go to langScreen with no screen transition
        application().gotolangScreenScreenNoTransition();
    }
    if (&src == &modeIOBtn)
    {
        //modeIOBtn_itt
        //When modeIOBtn clicked change screen to modeIOScreen
        //Go to modeIOScreen with no screen transition
        application().gotomodeIOScreenScreenNoTransition();
    }
    if (&src == &exchanBtn)
    {
        //exchanBtn_itt
        //When exchanBtn clicked change screen to exchanScreen
        //Go to exchanScreen with no screen transition
        application().gotoexchanScreenScreenNoTransition();
    }
    if (&src == &burnProcBtn)
    {
        //burnProcBtn_itt
        //When burnProcBtn clicked change screen to burnProcScreen
        //Go to burnProcScreen with no screen transition
        application().gotoburnProcScreenScreenNoTransition();
    }
    if (&src == &pflapBtn)
    {
        //pflapBtn_itt
        //When pflapBtn clicked change screen to pflapScreen
        //Go to pflapScreen with no screen transition
        application().gotopflapScreenScreenNoTransition();
    }
    if (&src == &sflapBtn)
    {
        //sflapBtn_itt
        //When sflapBtn clicked change screen to sflapScreen
        //Go to sflapScreen with no screen transition
        application().gotosflapScreenScreenNoTransition();
    }
    if (&src == &systemBtn)
    {
        //systemBtn_itt
        //When systemBtn clicked change screen to systemScreen
        //Go to systemScreen with no screen transition
        application().gotosystemScreenScreenNoTransition();
    }
    if (&src == &modeBtn)
    {
        //modeBtn_itt
        //When modeBtn clicked change screen to modeScreen
        //Go to modeScreen with no screen transition
        application().gotomodeScreenScreenNoTransition();
    }
    if (&src == &energyBtn)
    {
        //energyBtn_itt
        //When energyBtn clicked change screen to energyScreen
        //Go to energyScreen with no screen transition
        application().gotoenergyScreenScreenNoTransition();
    }
}
