/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/EditNumDlgContBase.hpp>
#include <images/BitmapDatabase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

EditNumDlgContBase::EditNumDlgContBase() :
    buttonCallback(this, &EditNumDlgContBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &EditNumDlgContBase::sliderValueChangedCallbackHandler)
{
    setWidth(480);
    setHeight(300);
    imgBg.setXY(0, 0);
    imgBg.setBitmap(touchgfx::Bitmap(BITMAP_EDIT_NUM_CONT_BG_ID));
    add(imgBg);

    boxTitle.setPosition(90, 10, 380, 30);
    boxTitle.setColor(touchgfx::Color::getColorFromRGB(224, 220, 220));
    add(boxTitle);

    v_maxVal.setPosition(402, 84, 60, 20);
    v_maxVal.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    v_maxVal.setLinespacing(0);
    v_maxValBuffer[0] = 0;
    v_maxVal.setWildcard(v_maxValBuffer);
    v_maxVal.setTypedText(touchgfx::TypedText(T_V_MAXVAL));
    add(v_maxVal);

    v_minVal.setPosition(20, 84, 60, 20);
    v_minVal.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    v_minVal.setLinespacing(0);
    v_minValBuffer[0] = 0;
    v_minVal.setWildcard(v_minValBuffer);
    v_minVal.setTypedText(touchgfx::TypedText(T_V_MINVAL));
    add(v_minVal);

    v_value.setPosition(170, 60, 140, 35);
    v_value.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    v_value.setLinespacing(0);
    v_valueBuffer[0] = 0;
    v_value.setWildcard(v_valueBuffer);
    v_value.setTypedText(touchgfx::TypedText(T_V_VALUE));
    add(v_value);

    v_name.setPosition(100, 10, 350, 30);
    v_name.setColor(touchgfx::Color::getColorFromRGB(12, 82, 148));
    v_name.setLinespacing(0);
    v_nameBuffer[0] = 0;
    v_name.setWildcard(v_nameBuffer);
    v_name.setTypedText(touchgfx::TypedText(T_V_NAME));
    add(v_name);

    okBtn.setXY(397, 235);
    okBtn.setBitmaps(touchgfx::Bitmap(BITMAP_OK_BTN56_ID), touchgfx::Bitmap(BITMAP_OK_BTN_PRESSED56_ID));
    okBtn.setAction(buttonCallback);
    add(okBtn);

    closeBtn.setXY(8, 8);
    closeBtn.setBitmaps(touchgfx::Bitmap(BITMAP_CLOSE_BTN_ID), touchgfx::Bitmap(BITMAP_CLOSE_BTN_P_ID));
    closeBtn.setAction(buttonCallback);
    add(closeBtn);

    downBtn.setXY(243, 165);
    downBtn.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_BTN_ID), touchgfx::Bitmap(BITMAP_DOWN_BTN_PRESSED_ID));
    downBtn.setDelay(60);
    downBtn.setInterval(12);
    downBtn.setAction(buttonCallback);
    add(downBtn);

    upBtn.setXY(107, 165);
    upBtn.setBitmaps(touchgfx::Bitmap(BITMAP_UP_BTN_ID), touchgfx::Bitmap(BITMAP_UP_BTN_PRESSED_ID));
    upBtn.setDelay(60);
    upBtn.setInterval(12);
    upBtn.setAction(buttonCallback);
    add(upBtn);

    slider.setXY(24, 110);
    slider.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDER_HORIZONTAL_THICK_TRACK_LARGE_ID), touchgfx::Bitmap(BITMAP_SLIDER_HORIZONTAL_THICK_FILLER_LARGE_ID), touchgfx::Bitmap(BITMAP_SLIDER_HORIZONTAL_THICK_ROUND_LIGHT_ID));
    slider.setupHorizontalSlider(16, 11, 0, 0, 400);
    slider.setValueRange(0, 100);
    slider.setValue(0);
    slider.setNewValueCallback(sliderValueChangedCallback);
    add(slider);
}

EditNumDlgContBase::~EditNumDlgContBase()
{

}

void EditNumDlgContBase::initialize()
{

}

void EditNumDlgContBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &upBtn)
    {
        //upBtn_itt
        //When upBtn clicked call virtual function
        //Call upBtn_clicked
        upBtn_clicked();
    }
    if (&src == &downBtn)
    {
        //downBtn_itt
        //When downBtn clicked call virtual function
        //Call downBtn_clicked
        downBtn_clicked();
    }
    if (&src == &okBtn)
    {
        //okBtn_itt
        //When okBtn clicked call virtual function
        //Call okBtn_clicked
        okBtn_clicked();
    }
    if (&src == &closeBtn)
    {
        //closeBtn_itt
        //When closeBtn clicked call virtual function
        //Call closeBtn_clicked
        closeBtn_clicked();
    }
}

void EditNumDlgContBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider)
    {
        //slider_itt
        //When slider value changed call virtual function
        //Call sliderChangeVal
        sliderChangeVal(value);
    }
}
