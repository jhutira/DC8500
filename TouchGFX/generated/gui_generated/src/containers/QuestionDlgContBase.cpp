/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/QuestionDlgContBase.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

QuestionDlgContBase::QuestionDlgContBase() :
    buttonCallback(this, &QuestionDlgContBase::buttonCallbackHandler)
{
    setWidth(480);
    setHeight(250);
    imgBg.setXY(0, 0);
    imgBg.setBitmap(touchgfx::Bitmap(BITMAP_QUEST_DLG_CONT_BG_ID));
    add(imgBg);

    v_qd_msg.setPosition(100, 52, 353, 88);
    v_qd_msg.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    v_qd_msg.setLinespacing(0);
    v_qd_msg.setWideTextAction(WIDE_TEXT_WORDWRAP);
    v_qd_msg.setTypedText(touchgfx::TypedText(T_MSG_Q_REALYDEFAULT));
    add(v_qd_msg);

    okBtn.setXY(101, 172);
    okBtn.setBitmaps(touchgfx::Bitmap(BITMAP_OK_BTN_ID), touchgfx::Bitmap(BITMAP_OK_BTN_PRESSED_ID));
    okBtn.setLabelText(touchgfx::TypedText(T_S_YESBTN));
    okBtn.setLabelColor(touchgfx::Color::getColorFromRGB(5, 5, 5));
    okBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    okBtn.setAction(buttonCallback);
    add(okBtn);

    closeBtn.setXY(250, 172);
    closeBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ABORT_BTN_ID), touchgfx::Bitmap(BITMAP_ABORT_BTN_PRESSED_ID));
    closeBtn.setLabelText(touchgfx::TypedText(T_S_NOBTN));
    closeBtn.setLabelColor(touchgfx::Color::getColorFromRGB(3, 3, 3));
    closeBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    closeBtn.setAction(buttonCallback);
    add(closeBtn);

    imgMsg.setXY(23, 61);
    imgMsg.setBitmap(touchgfx::Bitmap(BITMAP_QUESTION_ICON_ID));
    add(imgMsg);
}

QuestionDlgContBase::~QuestionDlgContBase()
{

}

void QuestionDlgContBase::initialize()
{

}

void QuestionDlgContBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &okBtn)
    {
        //okBtn_itt
        //When okBtn clicked call virtual function
        //Call okBtn_clicked
        okBtn_clicked();
    }
    if (&src == &closeBtn)
    {
        //closeBtn_itt
        //When closeBtn clicked call virtual function
        //Call closeBtn_clicked
        closeBtn_clicked();
    }
}
