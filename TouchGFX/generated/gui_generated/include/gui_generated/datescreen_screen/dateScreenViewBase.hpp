/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DATESCREENVIEWBASE_HPP
#define DATESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/datescreen_screen/dateScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/RepeatButton.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class dateScreenViewBase : public touchgfx::View<dateScreenPresenter>
{
public:
    dateScreenViewBase();
    virtual ~dateScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void okBtn_clicked()
    {
        // Override and implement this function in dateScreen
    }
    virtual void dUpBtn_clicked()
    {
        // Override and implement this function in dateScreen
    }
    virtual void dDownBtn_clicked()
    {
        // Override and implement this function in dateScreen
    }
    virtual void mUpBtn_clicked()
    {
        // Override and implement this function in dateScreen
    }
    virtual void mDownBtn_clicked()
    {
        // Override and implement this function in dateScreen
    }
    virtual void yUpBtn_clicked()
    {
        // Override and implement this function in dateScreen
    }
    virtual void yDownBtn_()
    {
        // Override and implement this function in dateScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image i_bg;
    touchgfx::RepeatButton mDownBtn;
    touchgfx::RepeatButton mUpBtn;
    touchgfx::RepeatButton yDownBtn;
    touchgfx::RepeatButton yUpBtn;
    touchgfx::RepeatButton dDownBtn;
    touchgfx::Button backBtn;
    touchgfx::Button okBtn;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::TextArea dialogLabel;
    touchgfx::TextAreaWithOneWildcard dateValue;
    touchgfx::RepeatButton dUpBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t DATEVALUE_SIZE = 11;
    touchgfx::Unicode::UnicodeChar dateValueBuffer[DATEVALUE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<dateScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DATESCREENVIEWBASE_HPP
